if (CONFIG_CHIP_ENABLE_EXTERNAL_PLATFORM)
# Generating platform/CHIPDeviceBuildConfig.h
file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/platform/CHIPDeviceBuildConfig.h
"#pragma once\n
#include <sdkconfig.h>\n

#if defined(CONFIG_ENABLE_WIFI_STATION) || defined(CONFIG_ENABLE_WIFI_AP)
#define CHIP_DEVICE_CONFIG_ENABLE_WPA 1
#else
#define CHIP_DEVICE_CONFIG_ENABLE_WPA 0
#endif

#ifdef CONFIG_ENABLE_MATTER_OVER_THREAD
#define CHIP_ENABLE_OPENTHREAD 1
#else
#define CHIP_ENABLE_OPENTHREAD 0
#endif

#ifdef CONFIG_OPENTHREAD_FTD
#define CHIP_DEVICE_CONFIG_THREAD_FTD 1
#else
#define CHIP_DEVICE_CONFIG_THREAD_FTD 0
#endif

#ifdef CONFIG_OPENTHREAD_BORDER_ROUTER
#define CHIP_DEVICE_CONFIG_THREAD_BORDER_ROUTER 1
#else
#define CHIP_DEVICE_CONFIG_THREAD_BORDER_ROUTER 0
#endif

#define CHIP_DEVICE_CONFIG_USES_OTBR_POSIX_DBUS_STACK 0
#define CHIP_STACK_LOCK_TRACKING_ENABLED 1
#define CHIP_STACK_LOCK_TRACKING_ERROR_FATAL 1

#ifdef CONFIG_ENABLE_ROTATING_DEVICE_ID
#define CHIP_ENABLE_ADDITIONAL_DATA_ADVERTISING 1
#else
#define CHIP_ENABLE_ADDITIONAL_DATA_ADVERTISING 0
#endif

#define CHIP_DEVICE_CONFIG_RUN_AS_ROOT 1
#define CHIP_DISABLE_PLATFORM_KVS 0

#ifdef CONFIG_ENABLE_OTA_REQUESTOR
#define CHIP_DEVICE_CONFIG_ENABLE_OTA_REQUESTOR 1
#else
#define CHIP_DEVICE_CONFIG_ENABLE_OTA_REQUESTOR 0
#endif

#ifdef CONFIG_ENABLE_ESP32_FACTORY_DATA_PROVIDER
#define CHIP_USE_TRANSITIONAL_COMMISSIONABLE_DATA_PROVIDER 0
#else
#define CHIP_USE_TRANSITIONAL_COMMISSIONABLE_DATA_PROVIDER 1
#endif

#define CHIP_USE_TRANSITIONAL_DEVICE_INSTANCE_INFO_PROVIDER 1
#define CHIP_DEVICE_LAYER_TARGET_ESP32 1


#define CHIP_DEVICE_CONFIG_MAX_DISCOVERED_IP_ADDRESSES 5
#define CHIP_DEVICE_CONFIG_ENABLE_DYNAMIC_MRP_CONFIG 0

#define CHIP_DEVICE_CONFIG_ENABLE_WIFIPAF 0

#if defined(CONFIG_THREAD_NETWORK_COMMISSIONING_DRIVER) && defined(CONFIG_THREAD_NETWORK_ENDPOINT_ID)
#define CHIP_DEVICE_CONFIG_THREAD_NETWORK_ENDPOINT_ID CONFIG_THREAD_NETWORK_ENDPOINT_ID
#else
#define CHIP_DEVICE_CONFIG_THREAD_NETWORK_ENDPOINT_ID 0
#endif

// For definitions for external platform
#define CHIP_DEVICE_LAYER_TARGET ESP32_custom
#define BLE_PLATFORM_CONFIG_INCLUDE <platform/ESP32_custom/BlePlatformConfig.h>
#define CHIP_DEVICE_PLATFORM_CONFIG_INCLUDE <platform/ESP32_custom/CHIPDevicePlatformConfig.h>
#define CHIP_PLATFORM_CONFIG_INCLUDE <platform/ESP32_custom/CHIPPlatformConfig.h>
#define INET_CONFIG_INCLUDE <platform/ESP32_custom/InetPlatformConfig.h>
#define SYSTEM_PLATFORM_CONFIG_INCLUDE <platform/ESP32_custom/SystemPlatformConfig.h>
#define EXTERNAL_CONFIGURATIONMANAGERIMPL_HEADER <platform/ESP32_custom/ConfigurationManagerImpl.h>
#define EXTERNAL_CHIPDEVICEPLATFORMEVENT_HEADER <platform/ESP32_custom/CHIPDevicePlatformEvent.h>
#define EXTERNAL_CONNECTIVITYMANAGERIMPL_HEADER <platform/ESP32_custom/ConnectivityManagerImpl.h>
#define EXTERNAL_BLEMANAGERIMPL_HEADER <platform/ESP32_custom/BLEManagerImpl.h>
#define EXTERNAL_KEYVALUESTOREMANAGERIMPL_HEADER <platform/ESP32_custom/KeyValueStoreManagerImpl.h>
#define EXTERNAL_PLATFORMMANAGERIMPL_HEADER <platform/ESP32_custom/PlatformManagerImpl.h>
#define EXTERNAL_THREADSTACKMANAGERIMPL_HEADER <platform/ESP32_custom/ThreadStackManagerImpl.h>
#define EXTERNAL_ESP32UTILS_HEADER <platform/ESP32_custom/ESP32Utils.h>
#define EXTERNAL_ESP32OTAIMAGEPROCESSORIMPL_HEADER <platform/ESP32_custom/OTAImageProcessorImpl.h>
#define EXTERNAL_ESP32DEVICEINFOPROVIDER_HEADER <platform/ESP32_custom/ESP32DeviceInfoProvider.h>
#define EXTERNAL_ESP32FACTORYDATAPROVIDER_HEADER <platform/ESP32_custom/ESP32FactoryDataProvider.h>
#define EXTERNAL_ESP32SECURECERTDACPROVIDER_HEADER <platform/ESP32_custom/ESP32SecureCertDACProvider.h>
#define EXTERNAL_ESP32SECURECERTDATAPROVIDER_HEADER <platform/ESP32_custom/ESP32SecureCertDataProvider.h>
")
endif()
