name: Build ESP-Matter Light (ESP32-H2)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout repository (your fork)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup ESP-IDF
        uses: espressif/setup-idf@v1
        with:
          version: 'v5.5.1'   # match your local ESP-IDF if you want
          tools: 'esp32h2-elf' # toolchain set

      - name: Build example (light)
        env:
          IDF_PATH: ${{ steps.setup-idf.outputs.idf-path }}
        run: |
          # go to example directory (change if you added a different example)
          cd examples/light
          idf.py set-target esp32h2
          idf.py fullclean || true
          idf.py build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: |
            examples/light/build/bootloader/bootloader.bin
            examples/light/build/partition_table/partition-table.bin
            examples/light/build/esp_ot_cli.bin || true
            examples/light/build/app.bin
            examples/light/build/*.bin
